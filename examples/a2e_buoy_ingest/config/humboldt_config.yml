pipeline:
  type: Ingest

  # File naming components
  location_id: "humboldt"
  dataset_name: "buoy_z05"
  # qualifier: ""
  temporal: "10min"
  data_level: "a1"
  

dataset_definition:  # Describes the dataset that will be produced
  attributes:
    description: "Pacific Northwest National Laboratory (PNNL) manages this AXYS WindSentinelTM buoy (Buoy #120) on 
    behalf of the U.S. Department of Energy (DOE) that collect a comprehensive set of meteorological and oceanographic
    (metocean) data to support resource characterization for wind energy offshore. The buoy collects in-situ sea 
    surface temperature, salinity, ocean currents, and wave data as well as near-surface air temperature, humidity, and
    horizontal wind speed and direction."
    conventions: "ME Data Pipeline Standards: Version 1.0"
    institution: Pacific Northwest National Laboratory
    code_url: https://github.com/tsdat/tsdat/releases/tag/v0.2.2
    instrument_manufacturer: "AXYS Technologies Inc."
    instrument_meaning: "Self-powered floating buoy hosting a suite of meteorological and marine instruments."
    instrument_name: "WindSentinel"
    location_meaning: "Humboldt, CA"
    title: "Surface Meteorological Measurements and Ocean Current Measurements from Buoy #130 at Humboldt, CA"

  dimensions:
    time:
        length: unlimited    
    depth:
        length: 50

  variable_defaults:
    input:
      required: True
      converter:
        classname: tsdat.utils.converters.DefaultConverter
        # parameters:
    dims: [time]
    type: float
    attrs:
      _FillValue: -9999
  
  variables:
    time:
      input:
        name: DataTimeStamp
        required: True
        converter:
          classname: tsdat.utils.converters.StringTimeConverter
          parameters:
            timezone: UTC
            time_format: "%Y-%m-%d %H:%M:%S"
      dims: [time]
      type: long
      attrs:
        long_name: Time (UTC)
        standard_name: time
        units: seconds since 1970-01-01T00:00:00
    
    # Coordinate variable added in customize_raw_datasets hook
    depth:
      input:
        name: depth
        required: True
        file_pattern: "currents"
      dims: [depth]
      type: long
      attrs:
        long_name: Depth
        units: m

    CTD_SST:  
      input: # From conductivity csv
        file_pattern: "conductivity"
        name: Surface Temperature (C)
        required: True
      attrs:
        long_name: Sea surface temperature
        units: degC
        fail_range: [-5, 45]

    conductivity:  
      input: # From conductivity csv
        file_pattern: "conductivity"
        name: Conductivity (Siemens/m)
        required: True
      attrs:
        long_name:  Ocean Conductivity
        units: S/m
        fail_range: [0, 7]
    
    ADCP_bin_size:  
      input: # From currents csv
        file_pattern: "currents"
        name: BinSpacing
      attrs:
        long_name: Spacing between ADCP measurement bins
        units: m
    
    ADCP_depth:  
      input: # From currents csv
        file_pattern: "currents"
        name: HeadDepth
      attrs:
        long_name: Depth of ADCP transducers below ocean surface
        units: m

    ADCP_blanking_distance:
      input: # From currents csv
        file_pattern: "currents"
        name: BlankingDistance
      attrs:
        long_name: Blanking Distance
        comment: A "blind zone" where ADCPs do not measure anything. Depends on ADCPs carrier frequency.
        units: m

    # This is a computed value, but the computation is now done in
    # a hook prior to dataset standardization, so it is considered
    # to have input.
    current_speed:
      input:
        file_pattern: "currents"
        name: current_speed
        required: True
        units: mm/s
      dims: [depth, time]
      attrs:
        long_name: Current Speed
        units: m/s
        fail_range: [0, 5]

    # This is a computed value, but the computation is now done in
    # a hook prior to dataset standardization, so it is considered
    # to have input.
    current_direction:
      input:
        file_pattern: "currents"
        name: current_direction
        required: True
      dims: [depth, time]
      attrs:
        long_name: Current Direction
        units: degrees
        fail_range: [0, 360]
        _FillValue: 225.

    gill_wind_speed:  
      input: # From gill csv
        name: gill_horizontal_wind_speed # Was "Horizontal Speed (m/s)" but needed to be renamed to prevent duplication
      attrs:
        long_name: Horizontal Wind Speed
        comment: Surface horizontal wind speed, 2D ultrasonic anemometer
        units: m/s
        fail_range: [0, 50]

    gill_wind_direction:  
      input: # From gill csv
        name: gill_horizontal_wind_direction # Was "Horizontal Direction (deg)" but needed to be renamed to prevent duplication
      attrs:
        long_name: Horizontal Wind Direction
        comment: Surface horizontal wind direction, 2D ultrasonic anemometer
        units: degrees
        fail_range: [0, 360]

    wind_speed:  
      input: # From wind csv
        name: Horizontal Speed (m/s)
      attrs:
        long_name: Horizontal Wind Speed
        comment: Surface wind speed, cup anemometer
        units: m/s
        fail_range: [0, 50]

    wind_direction:  
      input: # From wind csv
        name: Horizontal Direction (deg)
      attrs:
        long_name: Horizontal Wind Direction
        comment: Surface wind direction, wind vane
        units: degrees
        fail_range: [0, 360]

    pressure:  
      input: # From pressure csv
        name: Barometric Pressure (mb)
        units: mbar
      attrs:
        long_name: Atmospheric Pressure
        units: hPa
        fail_range: [500, 1100]
    
    rh:  
      input: # From rh csv
        name: Relative Humidity (%)
      attrs:
        long_name: Relative Humidity
        units: "%"
        fail_range: [0, 100]

    # Note that this variable had the same name as Surface Temperature from  
    # conductivity csv. It has been renamed to prevent a conflict, but the 
    # user will need to write the customize_raw_dataset() hook to rename the
    # raw input from "Surface Temperature (C)" to "surfacetemp - Surface 
    # Temperature (C)" so that the code can still retrieve it properly
    YSI_SST:  
      input: # From surfacetemp csv
        name: surfacetemp - Surface Temperature (C)
      attrs:
        long_name: Sea Surface Temperature
        comment: This is from the surfacetemp.csv file.
        units: degC
        fail_range: [-5, 50]
    
    air_temperature:  
      input: # From temperature csv
        name: Air Temperature (C)
      attrs:
        long_name: Air Temperature
        units: degC
        fail_range: [-40, 60]

    latitude:  
      input: # From gps csv
        name: Latitude
      attrs:
        long_name:  Latitude
        units: degree_N
      
    longitude:  
      input: # From gps csv
        name: Longitude
      attrs:
        long_name:  Longitude
        units: degree_E


#-----------------------------------------------------------------
quality_management:

  manage_missing_coordinates:
    checker:
      classname: tsdat.qc.checkers.CheckMissing
    handlers:
      - classname: tsdat.qc.handlers.FailPipeline
    variables:
      - COORDS


  manage_coordinate_monotonicity:
    checker:
      classname: tsdat.qc.checkers.CheckMonotonic
    handlers:
      - classname: tsdat.qc.handlers.FailPipeline
    variables:
      - COORDS


  manage_missing_values:
    checker:
      classname: tsdat.qc.checkers.CheckMissing
    handlers:
      - classname: tsdat.qc.handlers.RemoveFailedValues
        parameters:
          correction: "Removed missing values"
      - classname: tsdat.qc.handlers.RecordQualityResults
        parameters:
          bit: 1
          assessment: Bad
          meaning: "Value is equal to _FillValue or NaN"
    variables:
      - DATA_VARS


  manage_fail_min:
    checker:
      classname: tsdat.qc.checkers.CheckFailMin
    handlers:
      - classname: tsdat.qc.handlers.RemoveFailedValues
      - classname: tsdat.qc.handlers.RecordQualityResults
        parameters:
          bit: 2
          assessment: Bad
          meaning: "Value is less than the fail_range."
    variables:
      - DATA_VARS


  manage_fail_max:
    checker:
      classname: tsdat.qc.checkers.CheckFailMax
    handlers:
      - classname: tsdat.qc.handlers.RemoveFailedValues
      - classname: tsdat.qc.handlers.RecordQualityResults
        parameters:
          bit: 3
          assessment: Bad
          meaning: "Value is greater than the fail_range."
    variables:
      - DATA_VARS
