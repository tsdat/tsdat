{
    "title": "StorageConfig",
    "type": "object",
    "properties": {
        "classname": {
            "title": "Classname",
            "description": "The module path to the Python class that should be used, e.g., if you would write in your script `from tsdat.config.utils.converters import DefaultConverter` then you would put `tsdat.config.utils.converters.DefaultConverter` as the classname.",
            "type": "string"
        },
        "parameters": {
            "title": "Parameters",
            "description": "Optional dictionary that will be passed to the Python class specified by 'classname' when it is instantiated. If the object is a tsdat class, then the parameters will typically be made accessible under the `params` property on an instance of the class. See the documentation for individual classes for more information.",
            "default": {},
            "type": "object"
        },
        "registry": {
            "title": "Handler Registry",
            "description": "Register lists of DataReader(s) and DataWriter(s) to be used to read and write data from the pipeline.",
            "allOf": [
                {
                    "$ref": "#/definitions/HandlerRegistryConfig"
                }
            ]
        }
    },
    "required": [
        "classname",
        "registry"
    ],
    "additionalProperties": false,
    "definitions": {
        "DataReaderConfig": {
            "title": "DataReaderConfig",
            "type": "object",
            "properties": {
                "classname": {
                    "title": "Classname",
                    "description": "The module path to the Python class that should be used, e.g., if you would write in your script `from tsdat.config.utils.converters import DefaultConverter` then you would put `tsdat.config.utils.converters.DefaultConverter` as the classname.",
                    "type": "string"
                },
                "parameters": {
                    "title": "Parameters",
                    "description": "Optional dictionary that will be passed to the Python class specified by 'classname' when it is instantiated. If the object is a tsdat class, then the parameters will typically be made accessible under the `params` property on an instance of the class. See the documentation for individual classes for more information.",
                    "default": {},
                    "type": "object"
                },
                "name": {
                    "title": "Name",
                    "description": "A label used internally to distinguish registered DataHandlers.",
                    "type": "string"
                },
                "regex": {
                    "title": "Regex",
                    "description": "A regex pattern used to map input data keys (e.g., a file path or url passed as input from the pipeline runner) to the DataReader that should be used to read that resource. If there are multiple DataReader registered and an input data key would be matched by the regex pattern of multiple DataReaders, then only the DataReader corresponding with the first match will be used. Because of this, we recommend ordering your DataReaders from most specific pattern to least specific so that the most specific pattern will be matched first.",
                    "default": "",
                    "type": "string",
                    "format": "regex"
                }
            },
            "required": [
                "classname",
                "name"
            ],
            "additionalProperties": false
        },
        "DataWriterConfig": {
            "title": "DataWriterConfig",
            "type": "object",
            "properties": {
                "classname": {
                    "title": "Classname",
                    "description": "The module path to the Python class that should be used, e.g., if you would write in your script `from tsdat.config.utils.converters import DefaultConverter` then you would put `tsdat.config.utils.converters.DefaultConverter` as the classname.",
                    "type": "string"
                },
                "parameters": {
                    "title": "Parameters",
                    "description": "Optional dictionary that will be passed to the Python class specified by 'classname' when it is instantiated. If the object is a tsdat class, then the parameters will typically be made accessible under the `params` property on an instance of the class. See the documentation for individual classes for more information.",
                    "default": {},
                    "type": "object"
                },
                "name": {
                    "title": "Name",
                    "description": "A label used internally to distinguish registered DataHandlers.",
                    "type": "string"
                }
            },
            "required": [
                "classname",
                "name"
            ],
            "additionalProperties": false
        },
        "HandlerRegistryConfig": {
            "title": "HandlerRegistryConfig",
            "type": "object",
            "properties": {
                "readers": {
                    "title": "Input Data Handlers",
                    "description": "Register a list of DataHandler(s) that will be used to read input data. If multiple input DataHandlers are used, then you must add a 'regex' attribute for each that will be used to map input keys (i.e. file paths) to the input DataHandler that should be used to read that resource.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DataReaderConfig"
                    }
                },
                "writers": {
                    "title": "Output Data Handlers",
                    "description": "Register a list of DataHandler(s) that will be used to write output data. If multiple output DataHandlers are used, then you must add a 'regex' attribute for each that will be used to map output keys (i.e. file paths) to the DataHandler that should be used to write that resource.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DataWriterConfig"
                    }
                }
            },
            "required": [
                "readers",
                "writers"
            ]
        }
    }
}